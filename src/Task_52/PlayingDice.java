package Task_52;
/*
Игральные кубики (15%)
Время: 1 сек.
Память: 16 Мб
Сложность: 15%

Юный математик Матвей интересуется теорией вероятностей, и по этой причине у него всегда есть с собой несколько
стандартных шестигранных игральных кубиков. Стандартный шестигранный кубик имеет три противолежащих пары граней,
которые размечены таким образом, что напротив грани с числом 1 находится грань с числом 6, напротив грани с числом 2 —
грань с числом 5 и напротив грани с числом 3 — грань с числом 4.

Анализируя различные игры с шестигранными кубиками, Матвей придумал новую игру. В эту игру играют два игрока, и проходит
она следующим образом: первый игрок бросает один или несколько стандартных кубиков (количество кубиков он определяет
сам). После этого первому игроку начисляется количество очков, равное сумме чисел, оказавшихся на верхних гранях всех
кубиков, а второму игроку — сумма чисел, оказавшихся на нижних гранях этих кубиков. Побеждает тот, кто набрал больше
очков.

Например, если был брошен один кубик, и на верхней его грани выпало число два, то первый игрок получает два очка, а
второй — пять. В свою очередь, если было брошено два кубика и на их верхних гранях выпало по единице, то первый игрок
получает также два очка, а второй игрок – двенадцать очков, так как на нижних гранях этих кубиков оказались шестерки.

Матвей рассказал об этой игре своему другу, юному информатику Фоме, и они начали играть в неё через Интернет. Поскольку
Фома не видит результат броска и не знает, сколько кубиков бросает Матвей как первый игрок, то о набранных каждым
игроком очках он узнает только от Матвея. Чтобы проверить достоверность этой информации, Фома решил узнать, какое
минимальное и максимальное количество очков мог получить он, как второй игрок, если известно, сколько очков набрал
Матвей.

Требуется написать программу, которая по количеству очков, набранных первым игроком после броска, определяет наименьшее
и наибольшее количество очков, которые может получить второй игрок за этот бросок.

Формат ввода
Входной файл input.txt содержит одно натуральное число n — количество очков, которые получил первый игрок (n ≤ 1010).

Формат вывода
В выходной файл output.txt выведите два разделенных пробелом целых числа: минимальное и максимальное количество очков
соответственно, которые мог набрать второй игрок при таком броске кубиков.

Примеры
Ввод	Вывод
2	    5 12
36	    6 216
 */

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

public class PlayingDice {
    public static void main(String[] args) {
        int in;
        int min;
        int max;

        try (Scanner scanner = new Scanner(new FileReader("input.txt"))) {
            in = scanner.nextInt();
        } catch (FileNotFoundException e) {
            throw new RuntimeException(e);
        }

        max = in * 6;
        int ost = 0;
        if (in % 6 < 6 && in % 6 != 0) {
            ost = (in % 6 == 1) ? 6 :
                    (in % 6 == 2) ? 5 :
                            (in % 6 == 3) ? 4 :
                                    (in % 6 == 4) ? 3 : 2;
        }
        min = in / 6 + ost;

        try (FileWriter writer = new FileWriter("output.txt")){
            writer.write(String.valueOf(min) + " " + String.valueOf(max));
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }
}
